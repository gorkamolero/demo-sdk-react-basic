// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "./textstyles/fonts.css";
import "./reset.css";
import "./HbButtonWithIcon.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import { TextPrimitive, IconPrimitive } from "./_internal_primitives";
import { ButtonRoot } from "./_internal_button";

const styles = [
  {
    type: "default",
    layers: {
      QrGpru5iuK: {
        none: {
          text: "Button",
        },
      },
      "21mnkDJ1UQ": {
        none: {
          role: "img",
          icon: require("./assets/d335cc69-ef1c-4fab-a477-d420f754e056.svg"),
          useMask: true,
        },
      },
    },
  },
  {
    type: "enum",
    propName: "variant",
    values: [
      {
        propValue: "contained",
        layers: {
          "21mnkDJ1UQ": {
            none: {
              useMask: true,
            },
          },
        },
      },
    ],
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
  {
    type: "enum",
    propName: "variant",
    values: [
      {
        propValue: "contained",
        layers: {},
      },
    ],
  },
];

const variantPropTypes = [
  {
    type: "enum",
    propName: "variant",
    propValues: ["contained"],
  },
];

export const HbButtonWithIconContext = createContext(null);

function HbButtonWithIcon(_props) {
  const defaults = useContext(HbButtonWithIconContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <ButtonRoot
      {...props}
      key="root"
      addSpacing={true}
      internal={{
        styles: styles,
        layerId: "root",
        scope: "PZuf8HbDvD",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <>
          <TextPrimitive
            className={"__visly_reset __visly_scope_PZuf8HbDvD_QrGpru5iuK"}
            key={"QrGpru5iuK"}
            text={
              exists(props.text) ? props.text : getStyle("QrGpru5iuK", "text")
            }
            element={getStyle("QrGpru5iuK", "htmlElement")}
          />
          <IconPrimitive
            className={"__visly_reset __visly_scope_PZuf8HbDvD_21mnkDJ1UQ"}
            key={"21mnkDJ1UQ"}
            useMask={getStyle("21mnkDJ1UQ", "useMask")}
            src={getStyle("21mnkDJ1UQ", "icon")}
          />
        </>
      )}
    </ButtonRoot>
  );
}

HbButtonWithIcon.__variants = [
  {
    name: "variant",
    type: "group",
    variants: ["contained"],
  },
];

export default HbButtonWithIcon;
