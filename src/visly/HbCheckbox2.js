// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "./textstyles/fonts.css";
import "./reset.css";
import "./HbCheckbox2.css";
import React, { createContext, useContext } from "react";
import {
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import { IconPrimitive } from "./_internal_primitives";
import { CheckboxRoot } from "./_internal_checkbox";

const styles = [
  {
    type: "default",
    layers: {
      checkmark: {
        none: {
          icon: require("./assets/5cd79169-4d72-486a-bd71-20cfa0420bb2@1x.svg"),
          useMask: true,
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "checked",
    layers: {
      checkmark: {
        none: {
          useMask: true,
        },
      },
    },
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
  {
    type: "boolean",
    propName: "checked",
    layers: {},
  },
];

const variantPropTypes = [
  {
    type: "boolean",
    propName: "checked",
  },
];

export const HbCheckbox2Context = createContext(null);

function HbCheckbox2(_props) {
  const defaults = useContext(HbCheckbox2Context);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <CheckboxRoot
      {...props}
      key="root"
      addSpacing={false}
      internal={{
        projectId: "WDRq65T88Q",
        styles: styles,
        layerId: "root",
        scope: "91uUyvXv5c",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <IconPrimitive
          id={"icon_checkmark"}
          className={
            "__visly_reset_WDRq65T88Q __visly_scope_91uUyvXv5c_checkmark"
          }
          key={"checkmark"}
          useMask={getStyle("checkmark", "useMask")}
          src={getStyle("checkmark", "icon")}
        />
      )}
    </CheckboxRoot>
  );
}

HbCheckbox2.__variants = [
  {
    name: "checked",
    type: "variant",
  },
];

export default HbCheckbox2;
