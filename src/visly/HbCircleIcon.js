// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "./textstyles/fonts.css";
import "./reset.css";
import "./HbCircleIcon.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import { RootPrimitive, IconPrimitive } from "./_internal_primitives";

const styles = [
  {
    type: "default",
    layers: {
      "5dbE92sXAG": {
        none: {
          icon: require("./assets/6c09c43b-abd0-4776-8845-1535cdff712b.svg"),
          useMask: true,
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "HbYellowIcon",
    layers: {},
  },
  {
    type: "enum",
    propName: "size",
    values: [
      {
        propValue: "small",
        layers: {},
      },
    ],
  },
  {
    type: "boolean",
    propName: "justEmoji",
    layers: {
      "5dbE92sXAG": {
        none: {
          useMask: true,
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "HbGoldIcon",
    layers: {
      "5dbE92sXAG": {
        none: {
          useMask: true,
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "down",
    layers: {},
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
  {
    type: "boolean",
    propName: "HbYellowIcon",
    layers: {},
  },
  {
    type: "enum",
    propName: "size",
    values: [
      {
        propValue: "small",
        layers: {},
      },
    ],
  },
  {
    type: "boolean",
    propName: "justEmoji",
    layers: {},
  },
  {
    type: "boolean",
    propName: "HbGoldIcon",
    layers: {},
  },
  {
    type: "boolean",
    propName: "down",
    layers: {},
  },
];

const variantPropTypes = [
  {
    type: "boolean",
    propName: "HbYellowIcon",
  },
  {
    type: "enum",
    propName: "size",
    propValues: ["small"],
  },
  {
    type: "boolean",
    propName: "justEmoji",
  },
  {
    type: "boolean",
    propName: "HbGoldIcon",
  },
  {
    type: "boolean",
    propName: "down",
  },
];

export const HbCircleIconContext = createContext(null);

function HbCircleIcon(_props) {
  const defaults = useContext(HbCircleIconContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <RootPrimitive
      {...props}
      key="REGgNxJcPS"
      addSpacing={false}
      internal={{
        projectId: "WDRq65T88Q",
        styles: styles,
        layerId: "REGgNxJcPS",
        scope: "CyFbGY3R7m",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <IconPrimitive
          id={"Icon_5dbE92sXAG"}
          className={
            "__visly_reset_WDRq65T88Q __visly_scope_CyFbGY3R7m_5dbE92sXAG"
          }
          key={"5dbE92sXAG"}
          useMask={getStyle("5dbE92sXAG", "useMask")}
          src={exists(props.icon) ? props.icon : getStyle("5dbE92sXAG", "icon")}
        />
      )}
    </RootPrimitive>
  );
}

HbCircleIcon.__variants = [
  {
    name: "HbYellowIcon",
    type: "variant",
  },
  {
    name: "size",
    type: "group",
    variants: ["small"],
  },
  {
    name: "justEmoji",
    type: "variant",
  },
  {
    name: "HbGoldIcon",
    type: "variant",
  },
  {
    name: "down",
    type: "variant",
  },
];

export default HbCircleIcon;
