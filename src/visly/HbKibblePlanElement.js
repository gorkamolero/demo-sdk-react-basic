// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "./textstyles/fonts.css";
import "./reset.css";
import "./HbKibblePlanElement.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import {
  RootPrimitive,
  TextPrimitive,
  ContainerPrimitive,
  IconPrimitive,
} from "./_internal_primitives";
import HbCircleIconComposite, { HbCircleIconContext } from "./HbCircleIcon";

const styles = [
  {
    type: "default",
    layers: {
      "9ybSBrXEhR": {
        none: {
          icon: require("./assets/9eea1f39-dddc-4ae6-bde8-be3877fd7c68.svg"),
          useMask: true,
        },
      },
      Gi6nMrX2Hi: {
        none: {
          text: "Text",
        },
      },
      "7vDfFKfehd": {
        none: {
          text: "Text",
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "vertical",
    layers: {},
  },
  {
    type: "boolean",
    propName: "NoNext",
    layers: {},
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {
      HyRg7xxjXN: {
        none: {
          HbYellowIcon: true,
          HbGoldIcon: true,
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "vertical",
    layers: {
      HyRg7xxjXN: {},
    },
  },
  {
    type: "boolean",
    propName: "NoNext",
    layers: {
      HyRg7xxjXN: {},
    },
  },
];

const variantPropTypes = [
  {
    type: "boolean",
    propName: "vertical",
  },
  {
    type: "boolean",
    propName: "NoNext",
  },
];

export const HbKibblePlanElementContext = createContext(null);

function HbKibblePlanElement(_props) {
  const defaults = useContext(HbKibblePlanElementContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <RootPrimitive
      {...props}
      key="GmcpyJK2fr"
      addSpacing={true}
      internal={{
        projectId: "WDRq65T88Q",
        styles: styles,
        layerId: "GmcpyJK2fr",
        scope: "L5zZtfnHpg",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <>
          <ContainerPrimitive
            id={"NextEl_S9avakhyM6"}
            className={
              "__visly_reset_WDRq65T88Q __visly_scope_L5zZtfnHpg_S9avakhyM6"
            }
            key={"S9avakhyM6"}
            addSpacing={false}
            element={getStyle("S9avakhyM6", "htmlElement")}
            style={{
              position: "absolute",
            }}
          >
            {props.HbCircleIcon === undefined ? (
              <HbCircleIconComposite
                key={"HyRg7xxjXN"}
                {...getCompositeDefaultProps("HyRg7xxjXN")}
                id="HbCircleIcon_HyRg7xxjXN"
                className="__visly_reset_WDRq65T88Q __visly_scope_L5zZtfnHpg_HyRg7xxjXN"
              />
            ) : (
              <HbCircleIconContext.Provider
                key="HyRg7xxjXN-provider"
                value={{
                  key: "HyRg7xxjXN",
                  id: "HbCircleIcon_HyRg7xxjXN",
                  className:
                    "__visly_reset_WDRq65T88Q __visly_scope_L5zZtfnHpg_HyRg7xxjXN",
                  ...getCompositeDefaultProps("HyRg7xxjXN"),
                }}
              >
                {props.HbCircleIcon}
              </HbCircleIconContext.Provider>
            )}
          </ContainerPrimitive>
          <ContainerPrimitive
            id={"IconContainer_A6hnsRcSBb"}
            className={
              "__visly_reset_WDRq65T88Q __visly_scope_L5zZtfnHpg_A6hnsRcSBb"
            }
            key={"A6hnsRcSBb"}
            addSpacing={false}
            element={getStyle("A6hnsRcSBb", "htmlElement")}
          >
            {
              <IconPrimitive
                id={"Icon_9ybSBrXEhR"}
                className={
                  "__visly_reset_WDRq65T88Q __visly_scope_L5zZtfnHpg_9ybSBrXEhR"
                }
                key={"9ybSBrXEhR"}
                useMask={getStyle("9ybSBrXEhR", "useMask")}
                src={
                  exists(props.icon)
                    ? props.icon
                    : getStyle("9ybSBrXEhR", "icon")
                }
              />
            }
          </ContainerPrimitive>
          <TextPrimitive
            id={"Slot1_Gi6nMrX2Hi"}
            className={
              "__visly_reset_WDRq65T88Q __visly_scope_L5zZtfnHpg_Gi6nMrX2Hi"
            }
            key={"Gi6nMrX2Hi"}
            text={
              exists(props.slot1) ? props.slot1 : getStyle("Gi6nMrX2Hi", "text")
            }
            element={getStyle("Gi6nMrX2Hi", "htmlElement")}
          />
          <TextPrimitive
            id={"Slot2_7vDfFKfehd"}
            className={
              "__visly_reset_WDRq65T88Q __visly_scope_L5zZtfnHpg_7vDfFKfehd"
            }
            key={"7vDfFKfehd"}
            text={
              exists(props.slot2) ? props.slot2 : getStyle("7vDfFKfehd", "text")
            }
            element={getStyle("7vDfFKfehd", "htmlElement")}
          />
        </>
      )}
    </RootPrimitive>
  );
}

HbKibblePlanElement.HbCircleIcon = HbCircleIconComposite;
HbKibblePlanElement.__variants = [
  {
    name: "vertical",
    type: "variant",
  },
  {
    name: "NoNext",
    type: "variant",
  },
];

export default HbKibblePlanElement;
