// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "./textstyles/fonts.css";
import "./reset.css";
import "./HbResultsSwitch.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import {
  RootPrimitive,
  TextPrimitive,
  ContainerPrimitive,
} from "./_internal_primitives";

const styles = [
  {
    type: "default",
    layers: {
      UkdzqfKtpo: {
        none: {
          text: "Text",
        },
      },
      HDw8QKzs7p: {
        none: {
          text: "One-Time Purchase",
        },
      },
      ErMskujkgf: {
        none: {
          text: "Subscribe & Save 20%",
        },
      },
    },
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
];

const variantPropTypes = [];

export const HbResultsSwitchContext = createContext(null);

function HbResultsSwitch(_props) {
  const defaults = useContext(HbResultsSwitchContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <RootPrimitive
      {...props}
      key="XfsS8UVVNb"
      addSpacing={false}
      internal={{
        styles: styles,
        layerId: "XfsS8UVVNb",
        scope: "G6soLsaE7f",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <>
          <ContainerPrimitive
            className={"__visly_reset __visly_scope_G6soLsaE7f_Q3GAzF4SsV"}
            key={"Q3GAzF4SsV"}
            addSpacing={false}
            element={getStyle("Q3GAzF4SsV", "htmlElement")}
          >
            {
              <TextPrimitive
                className={"__visly_reset __visly_scope_G6soLsaE7f_ErMskujkgf"}
                key={"ErMskujkgf"}
                text={
                  exists(props.leftLabel)
                    ? props.leftLabel
                    : getStyle("ErMskujkgf", "text")
                }
                element={getStyle("ErMskujkgf", "htmlElement")}
              />
            }
          </ContainerPrimitive>
          <ContainerPrimitive
            className={"__visly_reset __visly_scope_G6soLsaE7f_8Yk4zNDXLG"}
            key={"8Yk4zNDXLG"}
            addSpacing={false}
            element={getStyle("8Yk4zNDXLG", "htmlElement")}
          >
            {
              <TextPrimitive
                className={"__visly_reset __visly_scope_G6soLsaE7f_HDw8QKzs7p"}
                key={"HDw8QKzs7p"}
                text={
                  exists(props.rightLabel)
                    ? props.rightLabel
                    : getStyle("HDw8QKzs7p", "text")
                }
                element={getStyle("HDw8QKzs7p", "htmlElement")}
              />
            }
          </ContainerPrimitive>
          <ContainerPrimitive
            className={"__visly_reset __visly_scope_G6soLsaE7f_M7AaCsm4Ka"}
            key={"M7AaCsm4Ka"}
            addSpacing={false}
            element={getStyle("M7AaCsm4Ka", "htmlElement")}
          >
            {
              <TextPrimitive
                className={"__visly_reset __visly_scope_G6soLsaE7f_UkdzqfKtpo"}
                key={"UkdzqfKtpo"}
                text={
                  exists(props.handlelabel)
                    ? props.handlelabel
                    : getStyle("UkdzqfKtpo", "text")
                }
                element={getStyle("UkdzqfKtpo", "htmlElement")}
              />
            }
          </ContainerPrimitive>
        </>
      )}
    </RootPrimitive>
  );
}

HbResultsSwitch.__variants = [];

export default HbResultsSwitch;
