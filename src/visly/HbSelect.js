// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "./textstyles/fonts.css";
import "./reset.css";
import "./HbSelect.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import {
  SpacerPrimitive,
  TextPrimitive,
  ContainerPrimitive,
  IconPrimitive,
} from "./_internal_primitives";
import {
  SelectRoot,
  SelectOptionContainer,
  SelectButton,
} from "./_internal_select";

const styles = [
  {
    type: "default",
    layers: {
      "select-button-text": {
        none: {
          text: "Selected",
        },
      },
      "3VtGBBDCR3": {
        none: {
          role: "img",
          icon: require("./assets/43a5e139-2110-4a5e-aacf-5845cb331df8.svg"),
          useMask: true,
        },
        hover: {
          useMask: true,
        },
        pressed: {
          useMask: true,
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "HbUnselected",
    layers: {},
  },
  {
    type: "enum",
    propName: "size",
    values: [
      {
        propValue: "small",
        layers: {},
      },
      {
        propValue: "medium",
        layers: {},
      },
      {
        propValue: "large",
        layers: {},
      },
      {
        propValue: "super",
        layers: {},
      },
    ],
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
  {
    type: "boolean",
    propName: "HbUnselected",
    layers: {},
  },
  {
    type: "enum",
    propName: "size",
    values: [
      {
        propValue: "small",
        layers: {},
      },
      {
        propValue: "medium",
        layers: {},
      },
      {
        propValue: "large",
        layers: {},
      },
      {
        propValue: "super",
        layers: {},
      },
    ],
  },
];

const variantPropTypes = [
  {
    type: "boolean",
    propName: "HbUnselected",
  },
  {
    type: "enum",
    propName: "size",
    propValues: ["small", "medium", "large", "super"],
  },
];

export const HbSelectContext = createContext(null);

function HbSelect(_props) {
  const defaults = useContext(HbSelectContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <SelectRoot
      {...props}
      key="select-root"
      addSpacing={false}
      internal={{
        styles: styles,
        layerId: "select-root",
        scope: "AaLudVhbjf",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <>
          <SelectButton
            key="select-button"
            className="__visly_reset __visly_scope_AaLudVhbjf_select-button"
          >
            <ContainerPrimitive
              className={"__visly_reset __visly_scope_AaLudVhbjf_Y1P6Hjm8D7"}
              key={"Y1P6Hjm8D7"}
              addSpacing={false}
              element={getStyle("Y1P6Hjm8D7", "htmlElement")}
            >
              {null}
            </ContainerPrimitive>
            <TextPrimitive
              className={
                "__visly_reset __visly_scope_AaLudVhbjf_select-button-text"
              }
              key={"select-button-text"}
              text={
                exists(props.label)
                  ? props.label
                  : getStyle("select-button-text", "text")
              }
              element={getStyle("select-button-text", "htmlElement")}
            />
            <SpacerPrimitive
              className={"__visly_reset __visly_scope_AaLudVhbjf_KFFKrL54Ck"}
              key={"KFFKrL54Ck"}
            />
            <ContainerPrimitive
              className={"__visly_reset __visly_scope_AaLudVhbjf_XBupFQrQKi"}
              key={"XBupFQrQKi"}
              addSpacing={false}
              element={getStyle("XBupFQrQKi", "htmlElement")}
            >
              {
                <IconPrimitive
                  className={
                    "__visly_reset __visly_scope_AaLudVhbjf_3VtGBBDCR3"
                  }
                  key={"3VtGBBDCR3"}
                  useMask={getStyle("3VtGBBDCR3", "useMask")}
                  src={getStyle("3VtGBBDCR3", "icon")}
                />
              }
            </ContainerPrimitive>
          </SelectButton>
          <SelectOptionContainer
            key="select-menu"
            className="__visly_reset __visly_scope_AaLudVhbjf_select-menu"
            innerKey="select-menu"
            addSpacing={false}
            useButtonWidth={true}
          >
            {props.children}
          </SelectOptionContainer>
        </>
      )}
    </SelectRoot>
  );
}

HbSelect.__variants = [
  {
    name: "HbUnselected",
    type: "variant",
  },
  {
    name: "size",
    type: "group",
    variants: ["small", "medium", "large", "super"],
  },
];

export default HbSelect;
