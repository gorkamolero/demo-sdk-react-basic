// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "../textstyles/fonts.css";
import "../reset.css";
import "./HbSection.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "../_internal_utils";
import {
  RootPrimitive,
  ImagePrimitive,
  TextPrimitive,
  ContainerPrimitive,
} from "../_internal_primitives";

const styles = [
  {
    type: "default",
    layers: {
      S2bhe8BS6y: {
        none: {
          text: "",
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "noMaxWidth",
    layers: {},
  },
  {
    type: "boolean",
    propName: "padded",
    layers: {},
  },
  {
    type: "boolean",
    propName: "withImage",
    layers: {},
  },
  {
    type: "boolean",
    propName: "noHeadNoPadding",
    layers: {},
  },
  {
    type: "boolean",
    propName: "withLargeImage",
    layers: {},
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
  {
    type: "boolean",
    propName: "noMaxWidth",
    layers: {},
  },
  {
    type: "boolean",
    propName: "padded",
    layers: {},
  },
  {
    type: "boolean",
    propName: "withImage",
    layers: {},
  },
  {
    type: "boolean",
    propName: "noHeadNoPadding",
    layers: {},
  },
  {
    type: "boolean",
    propName: "withLargeImage",
    layers: {},
  },
];

const variantPropTypes = [
  {
    type: "boolean",
    propName: "noMaxWidth",
  },
  {
    type: "boolean",
    propName: "padded",
  },
  {
    type: "boolean",
    propName: "withImage",
  },
  {
    type: "boolean",
    propName: "noHeadNoPadding",
  },
  {
    type: "boolean",
    propName: "withLargeImage",
  },
];

export const HbSectionContext = createContext(null);

function HbSection(_props) {
  const defaults = useContext(HbSectionContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <RootPrimitive
      {...props}
      key="EShhKqSiHB"
      addSpacing={false}
      internal={{
        projectId: "WDRq65T88Q",
        styles: styles,
        layerId: "EShhKqSiHB",
        scope: "VwNHqxyyTR",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <>
          <ContainerPrimitive
            key={"LmccNjQnKs"}
            id={"Slot_LmccNjQnKs"}
            className={
              "__visly_reset_WDRq65T88Q __visly_scope_VwNHqxyyTR_LmccNjQnKs"
            }
            addSpacing={false}
          >
            {props.waveslot1}
          </ContainerPrimitive>
          <ContainerPrimitive
            id={"Column_5xuTSehGki"}
            className={
              "__visly_reset_WDRq65T88Q __visly_scope_VwNHqxyyTR_5xuTSehGki"
            }
            key={"5xuTSehGki"}
            addSpacing={false}
            element={getStyle("5xuTSehGki", "htmlElement")}
          >
            <ContainerPrimitive
              id={"Image container_ATetp6636S"}
              className={
                "__visly_reset_WDRq65T88Q __visly_scope_VwNHqxyyTR_ATetp6636S"
              }
              key={"ATetp6636S"}
              addSpacing={false}
              element={getStyle("ATetp6636S", "htmlElement")}
            >
              {
                <ImagePrimitive
                  id={"Image_9NLaSWxu1C"}
                  className={
                    "__visly_reset_WDRq65T88Q __visly_scope_VwNHqxyyTR_9NLaSWxu1C"
                  }
                  key={"9NLaSWxu1C"}
                  src={
                    exists(props.imageSrc)
                      ? props.imageSrc
                      : getStyle("9NLaSWxu1C", "src")
                  }
                  alt={getStyle("9NLaSWxu1C", "alternateText")}
                />
              }
            </ContainerPrimitive>
            <ContainerPrimitive
              id={"Head_R8m6dsU8Qu"}
              className={
                "__visly_reset_WDRq65T88Q __visly_scope_VwNHqxyyTR_R8m6dsU8Qu"
              }
              key={"R8m6dsU8Qu"}
              addSpacing={false}
              element={getStyle("R8m6dsU8Qu", "htmlElement")}
            >
              {
                <TextPrimitive
                  id={"Text_S2bhe8BS6y"}
                  className={
                    "__visly_reset_WDRq65T88Q __visly_scope_VwNHqxyyTR_S2bhe8BS6y"
                  }
                  key={"S2bhe8BS6y"}
                  text={
                    exists(props.title)
                      ? props.title
                      : getStyle("S2bhe8BS6y", "text")
                  }
                  element={getStyle("S2bhe8BS6y", "htmlElement")}
                />
              }
            </ContainerPrimitive>
            <ContainerPrimitive
              key={"DUtcPCxYVN"}
              id={"Slot_DUtcPCxYVN"}
              className={
                "__visly_reset_WDRq65T88Q __visly_scope_VwNHqxyyTR_DUtcPCxYVN"
              }
              addSpacing={false}
            >
              {props.children}
            </ContainerPrimitive>
          </ContainerPrimitive>
          <ContainerPrimitive
            key={"C9ydbVQ2rK"}
            id={"Slot_C9ydbVQ2rK"}
            className={
              "__visly_reset_WDRq65T88Q __visly_scope_VwNHqxyyTR_C9ydbVQ2rK"
            }
            addSpacing={false}
          >
            {props.waveslot2}
          </ContainerPrimitive>
        </>
      )}
    </RootPrimitive>
  );
}

HbSection.__variants = [
  {
    name: "noMaxWidth",
    type: "variant",
  },
  {
    name: "padded",
    type: "variant",
  },
  {
    name: "withImage",
    type: "variant",
  },
  {
    name: "noHeadNoPadding",
    type: "variant",
  },
  {
    name: "withLargeImage",
    type: "variant",
  },
];

export default HbSection;
