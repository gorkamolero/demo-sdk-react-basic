// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "../textstyles/fonts.css";
import "./reset.css";
import "./HbCheckbox.css";
import React, { createContext, useContext } from "react";
import {
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import { IconPrimitive } from "./_internal_primitives";
import { CheckboxRoot } from "./_internal_checkbox";
import HbIconButtonComposite, { HbIconButtonContext } from "./HbIconButton";

const styles = [
  {
    type: "default",
    layers: {
      checkmark: {
        none: {
          role: "img",
          src: require("../assets/5cd79169-4d72-486a-bd71-20cfa0420bb2@1x.svg"),
          useMask: true,
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "checked",
    layers: {},
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {
      HkvrZpwtE4: {},
    },
  },
  {
    type: "boolean",
    propName: "checked",
    layers: {
      HkvrZpwtE4: {
        none: {
          HbIconButtonSelected: true,
        },
      },
    },
  },
];

const variantPropTypes = [
  {
    type: "boolean",
    propName: "checked",
  },
];

export const HbCheckboxContext = createContext(null);

function HbCheckbox(_props) {
  const defaults = useContext(HbCheckboxContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <CheckboxRoot
      {...props}
      key="root"
      addSpacing={false}
      internal={{
        styles: styles,
        layerId: "root",
        scope: "JGvT8rY9BT",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => [
        <IconPrimitive
          className={"__visly_reset __visly_scope_JGvT8rY9BT_checkmark"}
          key={"checkmark"}
          useMask={getStyle("checkmark", "useMask")}
          src={getStyle("checkmark", "src")}
        />,
        props.HbIconButton === undefined ? (
          <HbIconButtonComposite
            key={"HkvrZpwtE4"}
            {...getCompositeDefaultProps("HkvrZpwtE4")}
            className="__visly_reset __visly_scope_JGvT8rY9BT_HkvrZpwtE4"
          />
        ) : (
          <HbIconButtonContext.Provider
            key="HkvrZpwtE4-provider"
            value={{
              key: "HkvrZpwtE4",
              className: "__visly_reset __visly_scope_JGvT8rY9BT_HkvrZpwtE4",
              ...getCompositeDefaultProps("HkvrZpwtE4"),
            }}
          >
            {props.HbIconButton}
          </HbIconButtonContext.Provider>
        ),
      ]}
    </CheckboxRoot>
  );
}

HbCheckbox.HbIconButton = HbIconButtonComposite;
HbCheckbox.__variants = [
  {
    name: "checked",
    type: "variant",
  },
];

export default HbCheckbox;
