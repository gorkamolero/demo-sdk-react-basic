// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "../textstyles/fonts.css";
import "./reset.css";
import "./HbRadio.Button.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import {
  SpacerPrimitive,
  TextPrimitive,
  ContainerPrimitive,
  IconPrimitive,
} from "./_internal_primitives";
import { RadioGroupButtonRoot } from "./_internal_radio_group";

const styles = [
  {
    type: "default",
    layers: {
      "6uiwQ5NcML": {
        none: {
          text: "Title",
        },
      },
      PpaiPZQUUA: {
        none: {
          role: "img",
          src: require("../assets/b903d3b8-3830-4199-b34c-ca76aadb867b.svg"),
          useMask: true,
        },
      },
    },
  },
  {
    type: "boolean",
    propName: "selected",
    layers: {},
  },
  {
    type: "boolean",
    propName: "fullWidth",
    layers: {},
  },
  {
    type: "enum",
    propName: "size",
    values: [
      {
        propValue: "small",
        layers: {},
      },
      {
        propValue: "medium",
        layers: {},
      },
    ],
  },
  {
    type: "boolean",
    propName: "column",
    layers: {},
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
  {
    type: "boolean",
    propName: "selected",
    layers: {},
  },
  {
    type: "boolean",
    propName: "fullWidth",
    layers: {},
  },
  {
    type: "enum",
    propName: "size",
    values: [
      {
        propValue: "small",
        layers: {},
      },
      {
        propValue: "medium",
        layers: {},
      },
    ],
  },
  {
    type: "boolean",
    propName: "column",
    layers: {},
  },
];

const variantPropTypes = [
  {
    type: "boolean",
    propName: "selected",
  },
  {
    type: "boolean",
    propName: "fullWidth",
  },
  {
    type: "enum",
    propName: "size",
    propValues: ["small", "medium"],
  },
  {
    type: "boolean",
    propName: "column",
  },
];

export const ButtonContext = createContext(null);

function Button(_props) {
  const defaults = useContext(ButtonContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <RadioGroupButtonRoot
      {...props}
      key="radio-group-button-root"
      addSpacing={false}
      internal={{
        styles: styles,
        layerId: "radio-group-button-root",
        scope: "5gQcVEwtx6",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <>
          <ContainerPrimitive
            className={"__visly_reset __visly_scope_5gQcVEwtx6_DfPB1k7cBG"}
            key={"DfPB1k7cBG"}
            addSpacing={false}
          >
            {
              <IconPrimitive
                className={"__visly_reset __visly_scope_5gQcVEwtx6_PpaiPZQUUA"}
                key={"PpaiPZQUUA"}
                useMask={getStyle("PpaiPZQUUA", "useMask")}
                src={
                  exists(props.icon)
                    ? props.icon
                    : getStyle("PpaiPZQUUA", "src")
                }
              />
            }
          </ContainerPrimitive>
          <SpacerPrimitive
            className={"__visly_reset __visly_scope_5gQcVEwtx6_7Fq8iCsteh"}
            key={"7Fq8iCsteh"}
          />
          <TextPrimitive
            className={"__visly_reset __visly_scope_5gQcVEwtx6_6uiwQ5NcML"}
            key={"6uiwQ5NcML"}
            text={
              exists(props.title) ? props.title : getStyle("6uiwQ5NcML", "text")
            }
          />
        </>
      )}
    </RadioGroupButtonRoot>
  );
}

Button.__variants = [
  {
    name: "selected",
    type: "variant",
  },
  {
    name: "fullWidth",
    type: "variant",
  },
  {
    name: "size",
    type: "group",
    variants: ["small", "medium"],
  },
  {
    name: "column",
    type: "variant",
  },
];

export default Button;
